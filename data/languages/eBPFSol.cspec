<?xml version="1.0" encoding="UTF-8"?>
<compiler_spec>
   <data_organization>
      <absolute_max_alignment value="0" />
      <machine_alignment value="2" />
      <default_alignment value="1" />
      <default_pointer_alignment value="8" />
      <pointer_size value="8" />
      <wchar_size value="2" />
      <short_size value="2" />
      <integer_size value="4" />
      <long_size value="4" />
      <long_long_size value="8" />
      <float_size value="4" />
      <double_size value="8" />
      <long_double_size value="8" />
      <size_alignment_map>
         <entry size="1" alignment="1" />
         <entry size="2" alignment="2" />
         <entry size="4" alignment="4" />
         <entry size="8" alignment="8" />
      </size_alignment_map>
   </data_organization>
   <global>
      <range space="ram" />
      <range space="syscall" />
   </global>
   <stackpointer register="R11" space="ram" growth="negative" />
   <default_proto>
      <prototype name="ebpf_call" extrapop="8" stackshift="8">
         <input pointermax="8">
            <pentry minsize="1" maxsize="8">
               <register name="R1" />
            </pentry>
            <pentry minsize="1" maxsize="8">
               <register name="R2" />
            </pentry>
            <pentry minsize="1" maxsize="8">
               <register name="R3" />
            </pentry>
            <pentry minsize="1" maxsize="8">
               <register name="R4" />
            </pentry>
            <pentry minsize="1" maxsize="8">
               <register name="R5" />
            </pentry>
            <!--
            If there are more than 5 parameters, they are passed on the stack of
            the caller, which is passed in R5. Parameter 5 is R5-0x1000,
            parameter 6 is R5-0xff8, and so on.
            I don't know if it's possible at all to express that.
            -->
            <!-- The following join rule doesn't work without a stack pentry -->
            <pentry minsize="1" maxsize="500" align="8">
               <addr offset="8" space="stack"/>
            </pentry>
            <rule>
               <datatype name="any" minsize="9" maxsize="16" />
               <join align="true" />
            </rule>
         </input>
         <output killedbycall="true">
            <pentry minsize="1" maxsize="8">
               <register name="R0" />
            </pentry>
            <rule>
               <datatype name="any"/>
               <hidden_return/>
            </rule>
         </output>

         <unaffected>
            <register name="R6" />
            <register name="R7" />
            <register name="R8" />
            <register name="R9" />
            <register name="R10" />
            <register name="R11" />
         </unaffected>

         <!-- inject pcode at the start of each function -->
         <pcode inject="uponentry" dynamic="true" />

         <!-- not sure if this needs to be changed -->
         <returnaddress>
            <varnode space="stack" offset="0" size="8" />
         </returnaddress>
      </prototype>
   </default_proto>
</compiler_spec>
